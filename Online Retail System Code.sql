1 --The initial phase involves querying and exploring the data to discover useful insights.
--Count of returning customers who have made more than one purchase in the OnlineRetail
WITH CUSTOMER_COUNTS AS (
    SELECT 
        CUSTOMER_ID, 
        COUNT(DISTINCT INVOICE) AS TOTAL_PURCHASES
    FROM 
        ONLINERETAIL
    GROUP BY 
       CUSTOMER_ID
)
SELECT 
    COUNT(*) AS RETURNING_CUSTOMERS
FROM 
    CUSTOMER_COUNTS
WHERE 
TOTAL_PURCHASES > 1;
----------------------------------------------------------------
--Determine the monthly count of active customers based on the invoice date in the OnlineRetail dataset. 
SELECT 
    TO_CHAR(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI'), 'YYYY-Mon') AS MONTH, 
    COUNT(DISTINCT CUSTOMER_ID) AS MONTHLY_ACTIVE_USERS
FROM 
    ONLINERETAIL
GROUP BY 
    TO_CHAR(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI'), 'YYYY-Mon')
ORDER BY 
   MONTHLY_ACTIVE_USERS DESC ;
 -------------------------------------------------------------------
 --What is the daily revenue generated by the OnlineRetail dataset during the month of December 2011?
 SELECT 
    TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI') AS INVOICE_DATE, 
    SUM(PRICE*QUANTITY) AS DAILY_REVENUE
FROM 
    ONLINERETAIL
WHERE 
    TO_CHAR(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI'), 'YYYY-MM') = '2011-12'
GROUP BY 
    TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI')
ORDER BY 
    TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI');
    ---------------------------------------------------------
 --What is the summary of the monthly orders and revenue generated by the OnlineRetail dataset?
SELECT 
    TO_CHAR(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI'), 'YYYY-MM') AS MONTH, 
    COUNT(DISTINCT INVOICE) AS TOTAL_ORDERS,
    SUM(PRICE*QUANTITY) AS MONTHLY_REVENUE
FROM 
    ONLINERETAIL
GROUP BY 
    TO_CHAR(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI'), 'YYYY-MM')
ORDER BY 
    TOTAL_ORDERS DESC, MONTHLY_REVENUE DESC;
    ----------------------------------------------------
 --What is the correlation between the price and quantity of items sold in the OnlineRetail dataset?
 SELECT 
    CORR(PRICE, QUANTITY) as CORRELATION 
FROM 
    ONLINERETAIL
--------------------------------------------------------------------------
--What is the quarterly revenue and quantity of items sold by year in the OnlineRetail dataset?
select  distinct Year_, quarter,
 count(QUANTITY) as Quantity,
SUM(PRICE*QUANTITY) AS Quarter_REVENUE
from (
SELECT OnlineRetail.*,
    TO_CHAR(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI'), 'YYYY') AS Year_,
     NTILE(4) OVER(PARTITION BY EXTRACT(YEAR FROM TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI')), 
     ((EXTRACT(MONTH FROM TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI')) - 1) / 3) + 1 
     ORDER BY TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI')) AS quarter
    FROM OnlineRetail) 
Group By quarter,Year_
order By Quarter_REVENUE DESC , Quantity DESC
--------------------------------------
--It's time to create an RFM model.
WITH Data_ AS (
  SELECT DISTINCT CUSTOMER_ID,
    TRUNC(LAST_VALUE(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI')) OVER (ORDER BY TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI') ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) - LAST_VALUE(TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI')) OVER (PARTITION BY CUSTOMER_ID ORDER BY TO_DATE(INVOICEDATE, 'MM/DD/YYYY HH24:MI') RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) AS recency,
    COUNT(INVOICE) OVER (PARTITION BY CUSTOMER_ID ORDER BY INVOICE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS frequency,
    SUM(PRICE * QUANTITY) OVER (PARTITION BY CUSTOMER_ID) AS monetary
  FROM ONLINERETAIL
),
rfm_score As (
     select Data_.* ,
        Ntile(5) over(order by recency desc) as r_score,
        Ntile (5) over (order by frequency ) as f_score,
        Ntile(5) over(order by monetary) as m_score
        from Data_
                           ),
fm_score As (                     
    select customer_id,recency,frequency,monetary,r_score,( f_score+m_score/2) as fm_score
     from rfm_score)
     
select customer_id,recency,frequency,monetary,r_score, fm_score,

CASE
    WHEN (r_score = 5 AND fm_score IN (4, 5)) OR
         (r_score = 4 AND fm_score = 5) THEN 'Champions'
    WHEN (r_score = 5 AND fm_score = 2) OR
         (r_score = 4 AND fm_score in(2,3)) OR
         (r_score = 3 AND fm_score =3) THEN 'Potential Loyalists'
    WHEN (r_score = 5 AND fm_score = 3) OR
         (r_score = 4 AND fm_score = 4) OR
         (r_score = 3 AND fm_score in(5,4)) THEN 'Loyal Customers'
    WHEN r_score = 5 AND fm_score = 1 THEN 'Recent Customers'
    WHEN (r_score = 4 AND fm_score = 1) OR
              (r_score= 3 AND fm_score=1) THEN 'Promising'
    WHEN (r_score = 3 AND fm_score = 2) OR
         (r_score = 2 AND fm_score = 3) OR
         (r_score = 2 AND fm_score = 2) THEN 'Customers Needing Attention'
    WHEN (r_score = 2 AND fm_score IN (4, 5)) OR
         (r_score = 1 AND fm_score = 3) THEN 'At Risk'
    WHEN (r_score = 1 AND fm_score IN (4, 5)) THEN 'Cant Lose Them'
    WHEN r_score = 1 AND fm_score = 2 THEN 'Hibernating'
    WHEN r_score = 1 AND fm_score = 1 THEN 'Lost'
    Else 'About to sleep'
 END AS cust_segment
 from fm_score 
